// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace server.Migrations
{
    [DbContext(typeof(EF_DataContext))]
    [Migration("20230524103725_someFixes")]
    partial class someFixes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("Addtive", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("id"));

                    b.Property<decimal>("additivePrice")
                        .HasColumnType("numeric")
                        .HasColumnName("additive_price");

                    b.Property<string>("additiveTitle")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("additive_title");

                    b.Property<int>("productId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.HasKey("id");

                    b.ToTable("additives");
                });

            modelBuilder.Entity("BankCard", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("id"));

                    b.Property<string>("cvv")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("expirationDateBankCard")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("expiration_date_bank_card");

                    b.Property<int>("numberBanckCard")
                        .HasColumnType("integer")
                        .HasColumnName("number_bank_card");

                    b.Property<int>("userId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("id");

                    b.ToTable("banck_cards");
                });

            modelBuilder.Entity("Basket", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("id"));

                    b.Property<int>("countProduct")
                        .HasColumnType("integer")
                        .HasColumnName("count_product");

                    b.Property<int>("product")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<int>("userId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("id");

                    b.ToTable("basket");
                });

            modelBuilder.Entity("Feature", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("id"));

                    b.Property<string>("featureTitle")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("feature_title");

                    b.Property<string>("featureValue")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("feature_value");

                    b.HasKey("id");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("OrderHistory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("id"));

                    b.Property<DateOnly?>("dateOrder")
                        .IsRequired()
                        .HasColumnType("date")
                        .HasColumnName("date_order");

                    b.Property<int>("productId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<int>("userId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("id");

                    b.ToTable("order_history");
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("id"));

                    b.Property<decimal>("productPrice")
                        .HasColumnType("numeric")
                        .HasColumnName("product_price");

                    b.Property<string>("productTitle")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("product_title");

                    b.Property<string>("productType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("product_type");

                    b.HasKey("id");

                    b.ToTable("products");
                });

            modelBuilder.Entity("ProductFeature", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("id"));

                    b.Property<int>("featureId")
                        .HasColumnType("integer")
                        .HasColumnName("feature_id");

                    b.Property<int>("productId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.HasKey("id");

                    b.ToTable("product_features");
                });

            modelBuilder.Entity("TypeProduct", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("id"));

                    b.Property<string>("typeTitle")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type_title");

                    b.HasKey("id");

                    b.ToTable("types_product");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("id"));

                    b.Property<int?>("dayBirth")
                        .HasColumnType("integer")
                        .HasColumnName("day_birth");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("monthBirth")
                        .HasColumnType("text")
                        .HasColumnName("month_birth");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("numberAccumuletedBonuses")
                        .HasColumnType("integer")
                        .HasColumnName("number_accumuleted_bonuses");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.HasKey("id");

                    b.ToTable("users");
                });
#pragma warning restore 612, 618
        }
    }
}
